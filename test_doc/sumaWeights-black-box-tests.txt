
1. El Software Under Test (SUT):

	Método: sumaWeights(Map<Integer, Map<Integer, Integer>> weights, int movieKey);

2. Parámetros:

	[ Map<Integer, Map<Integer, Integer>> user_movies]
	[ int movieKey ]

3. Caracterización:

        C1.1: lista de películas con algún elemento / vacía
        C1.2: Ningún elemento null / algún elemento null
	C1.3: Algún elemento no null / todos los elementos null 
        
	C1.4: Integer1 inválido / válido
        C1.5: Integer2 inválido / válido
        C1.6: Integer3 inválido / válido


        C2.1: int válido / no válido
        C2.2: int no cero / cero
        C2.3: int no negativo / negativo
        C2.4: movieKey existente / no existente


4. Requisitos:

        En este caso al tratarse de muchas caracterizaciones, vamos a utilizar el método de Each Choice Coverage (ECC), escogiendo un valor interesante de cada bloque de cada caracterización para que apa$

        TTT TTT TTTT
	TFT TTT TTTT
	TTF TTT TTTT
	TTT TFT TTTT
	TTT TTT FTTF
	TTT TTT TFTF
	TTT TTT TTFF
	TTT TTT TTTF
